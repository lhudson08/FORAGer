.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "FORAGER_TBLASTN_FAIL_CHECK 1"
.TH FORAGER_TBLASTN_FAIL_CHECK 1 "2013-09-19" "perl v5.14.2" "User Contributed Perl Documentation"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
FORAGer_tblastn_filter.pl \-\- use tblastn to filter out false 'passed' FORAGer contigs
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
FORAGer_tblastn_filter.pl [flags] FORAGer_screen.txt
.SS "required flags"
.IX Subsection "required flags"
.IP "\-runID" 4
.IX Item "-runID"
Cluster runID.
.IP "\-fig" 4
.IX Item "-fig"
\&\s-1ITEP\s0 organim \s-1FIG\s0 \s-1ID\s0.
.SS "optional flags"
.IX Subsection "optional flags"
.IP "\-PA" 4
.IX Item "-PA"
Presence-absence table from FORAGer_screen.pl (updated if provided).
.IP "\-overlap" 4
.IX Item "-overlap"
Fraction overlap with existing gene to call the gene pre-existing. [0.8]
.IP "\-evalue" 4
.IX Item "-evalue"
tblastn evalue cutoff. [1e\-30]
.IP "\-length" 4
.IX Item "-length"
minimum tblast hit length (fraction of query length). [0.8]
.IP "\-x" 4
.IX Item "-x"
Fraction of query PEGs that must have good overlapping hits (>=). [0.5]
.IP "\-name" 4
.IX Item "-name"
Name of tblastn output file directoy. ['fail_check_tblastn']
.IP "\-v	Verbose output" 4
.IX Item "-v	Verbose output"
.PD 0
.IP "\-h	This help message" 4
.IX Item "-h	This help message"
.PD
.SS "For more information:"
.IX Subsection "For more information:"
perldoc FORAGer_tblastn_filter.pl
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Some 'failed' contigs from FORAGer may
be caused by multiple copies of the gene
in the genome which breaks the targeted 
assembly.
.PP
This script uses tblastn to check to see
if the gene is actually present in the genome.
.PP
\fIGene tblastn hit 'presence' criteria:\fR
.IX Subsection "Gene tblastn hit 'presence' criteria:"
.IP "\(bu" 4
The e\-value cutoff must be met.
.IP "\(bu" 4
The hit length cutoff must be met.
.IP "\(bu" 4
The hit must be on the same strand as a pre-existing gene.
.IP "\(bu" 4
The hit must overlap to X% as the pre-existing gene.
.PP
\fIOutput to \s-1STDOUT:\s0\fR
.IX Subsection "Output to STDOUT:"
.IP "1) cluster_id" 4
.IX Item "1) cluster_id"
.PD 0
.IP "2) 'gene_exists' \s-1OR\s0 'gene_not_found'" 4
.IX Item "2) 'gene_exists' OR 'gene_not_found'"
.PD
.PP
If '\-x' fraction of query PEGs have good overlapping
hits to pre-existing genes, the query contig
from FORAGer is considered pre-existing or an 
artefact (i.e. not a real new gene).
.PP
If the presence-absence & screening summary
files from FORAGer_screen.pl are provided, both
tables are updated with the tblastn information:
.IP "\(bu" 4
Only tblastn-passed contigs will be written to 
the \s-1PA\s0 table.
.IP "\(bu" 4
The screen summary table will have a final tblastn
summary & the binary pass/fail column will reflect
the tblastn results.
.SS "Requires:"
.IX Subsection "Requires:"
\&\s-1ITEP\s0 & db_TBlastN_wrapper.py
.SH "EXAMPLES"
.IX Header "EXAMPLES"
.SS "Basic Usage:"
.IX Subsection "Basic Usage:"
FORAGer_tblastn_filter.pl \-r mazei_I_2.0_c_0.4_m_maxbit \-fig 2209.17 Mapped2Cluster_query_passed/
.SS "Updating \s-1PA\s0 and screen files"
.IX Subsection "Updating PA and screen files"
FORAGer_tblastn_filter.pl \-r mazei_I_2.0_c_0.4_m_maxbit \-fig 2209.17 \-PA FORAGer_PA.txt \-screen FORAGer_screen.txt Mapped2Cluster_query_passed/
.SS "Altering tblastn 'overlapping_gene' cutoffs"
.IX Subsection "Altering tblastn 'overlapping_gene' cutoffs"
FORAGer_tblastn_filter.pl \-r mazei_I_2.0_c_0.4_m_maxbit \-fig 2209.17 \-o 0.2 \-l 0.9 Mapped2Cluster_query_passed/
.SH "AUTHOR"
.IX Header "AUTHOR"
Nick Youngblut <nyoungb2@illinois.edu>
.SH "AVAILABILITY"
.IX Header "AVAILABILITY"
sharchaea.life.uiuc.edu:/home/git/FORAGer/
.SH "COPYRIGHT"
.IX Header "COPYRIGHT"
Copyright 2010, 2011
This software is licensed under the terms of the GPLv3
